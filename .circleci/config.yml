# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/elixir:1.10
        environment:
          DATABASE_URL_TEST: postgresql://root@localhost/circle_test?sslmode=disable
          TENERVES_URL_TEST: postgresql://root@localhost/circle_test?sslmode=disable

      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test

    steps:
      - checkout

      - run:
          name: Install hex and rebar
          command: |
            mix local.hex --force
            mix local.rebar --force

      - run:
          name: Install dependencies
          command: |
            mix deps.get

      - run:
          name: Compile
          command: |
            mix compile

      - run:  # special utility that stalls main process until DB is ready
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Run tests
          command: |
            mix test

      - store_test_results:
          path: _build/test/lib/scrooge

  deploy-beta:
    docker:
      - image: circleci/elixir:1.10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and upload docker image
          command: |
            docker build \
              --file "Dockerfile" \
              --tag "brianmay/scrooge:latest" \
              --build-arg "BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`" \
              --build-arg "VCS_REF=$CIRCLE_SHA1" \
              .
            docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
            docker push "brianmay/scrooge:latest"

  verify-version:
    docker:
      - image: circleci/elixir:1.10
    steps:
      - checkout

  deploy-prod-docker:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and upload docker image
          command: |
            docker build \
              --file "Dockerfile" \
              --tag "brianmay/scrooge:$CIRCLE_TAG" \
              --build-arg "BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`" \
              --build-arg "VCS_REF=$CIRCLE_SHA1" \
              .
            docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
            docker push "brianmay/scrooge:$CIRCLE_TAG"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy-beta:
          context: Docker
          requires:
            - build
          filters:
            branches:
              only: master
      - verify-version:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy-prod-docker:
          context: Docker
          requires:
            - verify-version
          filters:
            tags:
              only: /.*/
